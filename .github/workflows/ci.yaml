name: ci

on:
  push:
    branches: [master]
  release:
    types: [created]
  pull_request:
    branches: [master]

permissions:
  contents: read

jobs:
  build:
    uses: miracum/.github/.github/workflows/standard-build.yaml@61598243fff8ce6ef7bd312e26d586b2dd10d7b3 # v1.16.23
    permissions:
      contents: write
      id-token: write
      packages: write
      pull-requests: write
      actions: read
      security-events: write
    with:
      enable-build-test-layer: true
      enable-upload-test-image: true
      platforms: |
        linux/amd64
        linux/arm64
    secrets:
      github-token: ${{ secrets.GITHUB_TOKEN }}

  add-test-coverage:
    name: "Add test coverage"
    runs-on: ubuntu-24.04
    needs:
      - build
    permissions:
      # for add Coverage PR Comment
      pull-requests: write
    if: ${{ github.event_name == 'pull_request' }}
    steps:
      # <https://docs.docker.com/storage/containerd/>
      # via <https://github.com/docker/setup-buildx-action/issues/257>
      - name: "Set up containerd image store"
        shell: bash
        run: |
          [ -f /etc/docker/daemon.json ] || echo "{}" | sudo tee /etc/docker/daemon.json
          jq '. | .+{"features": {"containerd-snapshotter": true}}' /etc/docker/daemon.json > /tmp/docker-daemon-with-containerd.json
          sudo mv /tmp/docker-daemon-with-containerd.json /etc/docker/daemon.json
          cat /etc/docker/daemon.json
          sudo systemctl restart docker

          docker info -f '{{ .DriverStatus }}'

      - name: "Download test image"
        uses: actions/download-artifact@d3f86a106a0bac45b974a628896c90dbdf5c8093 # v4.3.0
        with:
          name: ${{ needs.build.outputs.image-slug }}-test
          path: /tmp

      - name: "Load test image"
        run: |
          ls -lsa /tmp
          docker load --input /tmp/image-test.tar
          docker image ls

      - name: "Copy unit test coverage reports from test container"
        env:
          UNIT_TEST_IMAGE: ${{ fromJson(needs.build.outputs.test-image-meta-json).tags[0] }}
          GITHUB_WORKSPACE: ${{ github.workspace }}
        run: |
          docker create --name=unit-test-container "${UNIT_TEST_IMAGE}"
          docker cp unit-test-container:/test "${GITHUB_WORKSPACE}/test"

      - name: "Add coverage to PR"
        id: jacoco
        uses: madrapps/jacoco-report@50d3aff4548aa991e6753342d9ba291084e63848 # v1.7.2
        env:
          GITHUB_WORKSPACE: ${{ github.workspace }}
        with:
          paths: |
            "${GITHUB_WORKSPACE}/test/jacoco/test/jacocoTestReport.xml"
          token: ${{ secrets.GITHUB_TOKEN }}
          min-coverage-overall: 40
          min-coverage-changed-files: 60
          update-comment: true
          title: "## Code Coverage Report"

  test:
    name: "Test"
    runs-on: ubuntu-24.04
    needs:
      - build
    steps:
      # <https://docs.docker.com/storage/containerd/>
      # via <https://github.com/docker/setup-buildx-action/issues/257>
      - name: "Set up containerd image store"
        shell: bash
        run: |
          [ -f /etc/docker/daemon.json ] || echo "{}" | sudo tee /etc/docker/daemon.json
          jq '. | .+{"features": {"containerd-snapshotter": true}}' /etc/docker/daemon.json > /tmp/docker-daemon-with-containerd.json
          sudo mv /tmp/docker-daemon-with-containerd.json /etc/docker/daemon.json
          cat /etc/docker/daemon.json
          sudo systemctl restart docker

          docker info -f '{{ .DriverStatus }}'

      - name: "Checkout code"
        uses: actions/checkout@08eba0b27e820071cde6df949e0beb9ba4906955 # v4.3.0
        with:
          persist-credentials: false

      - name: "Download build image"
        uses: actions/download-artifact@d3f86a106a0bac45b974a628896c90dbdf5c8093 # v4.3.0
        if: ${{ github.event_name == 'pull_request' }}
        with:
          name: ${{ needs.build.outputs.image-slug }}
          path: /tmp

      - name: "Load image"
        if: ${{ github.event_name == 'pull_request' }}
        run: |
          ls -lsa /tmp
          docker load --input /tmp/image.tar
          docker image ls

      - name: "Run E2E tests"
        env:
          FHIR_GATEWAY_IMAGE_NAME: "${{ fromJson(needs.build.outputs.image-meta-json).tags[0] }}"
        run: |
          docker compose -p e2e -f dev/docker-compose.yml -f dev/docker-compose.gw-deps.yml -f tests/e2e/docker-compose.yml --project-directory=tests/e2e build
          docker compose -p e2e -f dev/docker-compose.yml -f dev/docker-compose.gw-deps.yml --project-directory=tests/e2e up -d
          docker compose -p e2e -f dev/docker-compose.yml -f dev/docker-compose.gw-deps.yml -f tests/e2e/docker-compose.yml --project-directory=tests/e2e run tester

      - name: "Print E2E logs"
        env:
          FHIR_GATEWAY_IMAGE_NAME: "${{ fromJson(needs.build.outputs.image-meta-json).tags[0] }}"
        if: ${{ always() }}
        run: |
          docker compose -p e2e -f dev/docker-compose.yml -f dev/docker-compose.gw-deps.yml -f tests/e2e/docker-compose.yml logs
          docker compose -p e2e -f dev/docker-compose.yml -f dev/docker-compose.gw-deps.yml -f tests/e2e/docker-compose.yml down --volumes --remove-orphans

  lint:
    uses: miracum/.github/.github/workflows/standard-lint.yaml@61598243fff8ce6ef7bd312e26d586b2dd10d7b3 # v1.16.23
    permissions:
      contents: read
      pull-requests: write
      issues: write
      security-events: write
      actions: read
    with:
      codeql-languages: '["java", "python"]'
      enable-codeql: true
      java-version: "21"
    secrets:
      github-token: ${{ secrets.GITHUB_TOKEN }}

  release:
    uses: miracum/.github/.github/workflows/standard-release.yaml@61598243fff8ce6ef7bd312e26d586b2dd10d7b3 # v1.16.23
    needs:
      - build
      - test
    permissions:
      contents: write
      pull-requests: write
      issues: write
    secrets:
      semantic-release-token: ${{ secrets.MIRACUM_BOT_SEMANTIC_RELEASE_TOKEN }}
