plugins {
    id 'org.springframework.boot' version "3.4.2"
    id 'io.spring.dependency-management' version "1.1.7"
    id 'java'
    id 'jacoco'
    id 'com.diffplug.spotless' version "6.25.0"
    id "net.ltgt.errorprone" version "4.1.0"
    id "org.sonarqube" version "5.1.0.4882"
}

group = "org.miracum.etl"
version = "3.14.2"

java {
  toolchain {
    languageVersion = JavaLanguageVersion.of(21)
  }
}

repositories {
    mavenCentral()
}

ext {
    set("springCloudVersion", "2023.0.5")
    set("hapiVersion", "7.6.1")
}

dependencies {
    implementation "org.springframework.boot:spring-boot-starter-actuator"
    implementation "org.springframework.boot:spring-boot-starter-data-jdbc"
    implementation "org.springframework.boot:spring-boot-starter-web"

    implementation "org.springframework.cloud:spring-cloud-stream"
    implementation "org.springframework.cloud:spring-cloud-stream-binder-kafka"
    implementation "org.springframework.kafka:spring-kafka"

    implementation "org.miracum:kafka-fhir-serializer:1.0.8"

    implementation "io.micrometer:micrometer-registry-prometheus:1.14.3"
    implementation "io.micrometer:micrometer-core:1.14.3"

    implementation "net.logstash.logback:logstash-logback-encoder:8.0"

    implementation "ca.uhn.hapi.fhir:hapi-fhir-base:${hapiVersion}"
    implementation "ca.uhn.hapi.fhir:hapi-fhir-client:${hapiVersion}"
    implementation "ca.uhn.hapi.fhir:hapi-fhir-structures-r4:${hapiVersion}"
    implementation "ca.uhn.hapi.fhir:hapi-fhir-client-okhttp:${hapiVersion}"

    developmentOnly "org.springframework.boot:spring-boot-devtools"
    runtimeOnly "org.postgresql:postgresql:42.7.5"
    runtimeOnly 'com.h2database:h2:2.3.232'
    testImplementation "org.springframework.boot:spring-boot-starter-test"
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'

    errorprone("com.google.errorprone:error_prone_core:2.36.0")
    errorprone("com.uber.nullaway:nullaway:0.12.3")
}

dependencyManagement {
    imports {
        mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
    }
}

tasks.named('test') {
  useJUnitPlatform()
}

jacocoTestReport {
	reports {
		csv.required = true
		html.required = true
		xml.required = true
	}
}

jar {
    enabled = false
}

spotless {
    java {
        importOrder()
        removeUnusedImports()
        googleJavaFormat()
    }
}

import net.ltgt.gradle.errorprone.CheckSeverity

tasks.withType(JavaCompile).configureEach {
    options.errorprone {
        check("NullAway", CheckSeverity.ERROR)
        option("NullAway:AnnotatedPackages", "org.miracum")
    }
    // Include to disable NullAway on test code
    if (name.toLowerCase().contains("test")) {
        options.errorprone {
            disable("NullAway")
        }
    }
}
